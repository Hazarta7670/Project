# Generated by Django 3.2.12 on 2022-04-10 11:01

import Calories.usersapp.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('date_join', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('first_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)])),
                ('last_name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)])),
                ('image', models.ImageField(blank=True, null=True, upload_to='images', validators=[Calories.usersapp.validators.image_max_size])),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator])),
                ('age', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('weight', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('height', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('activity_level', models.CharField(choices=[('Little or No Training', 'Little or No Training'), ('Light Exercises One-Two times a Week', 'Light Exercises One-Two times a Week'), ('Moderately loaded Exercises Two-Three times a Week', 'Moderately loaded Exercises Two-Three times a Week'), ('Intensive Exercise Four-Five times a Week', 'Intensive Exercise Four-Five times a Week'), ('Heavy Exercise, Physical Work or Sport Six-Seven days a Week', 'Heavy Exercise, Physical Work or Sport Six-Seven days a Week')], max_length=60)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='usersapp.usermodel')),
            ],
        ),
    ]
